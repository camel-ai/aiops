修复方案：

1. 确保包含FileUploader组件
```javascript
import FileUploader from '@/components/upload/FileUploader.vue'

export default {
  components: {
    // 其他组件...
    FileUploader
  },
  // ...
}
```

2. 修改聊天输入区域，删除之前的上传界面，使用新组件替代
```html
<div class="chat-input-container">
  <FileUploader v-model="uploadedFiles" />
  <div class="input-wrapper">
    <el-input
      v-model="userInput"
      type="textarea"
      :autosize="{ minRows: 2, maxRows: 5 }"
      placeholder="输入消息，按Enter发送，Shift+Enter换行"
      @keydown.enter="handleEnterKey"
      :disabled="loading"
    />
    <div class="input-actions">
      <el-button 
        class="send-button" 
        type="primary" 
        @click="sendMessage" 
        :loading="loading"
      >
        发送
      </el-button>
    </div>
  </div>
</div>
```

3. 确保返回对象中包含uploadedFiles

搜索Workspace.vue文件中的返回对象（通常在setup函数的末尾）：
```javascript
return {
  // 用户相关
  currentUser,
  activeMenu,
  // ...其他属性...
  
  // 聊天相关
  userInput,
  messages,
  loading,
  chatMessagesRef,
  sendMessage,
  handleEnterKey,
  scrollToBottom,
  
  // 文件上传相关
  uploadedFiles,  // 添加这一行
  
  // 项目相关
  // ...其他属性...
}
```

这个修复方案解决了以下问题：
1. 将散布在Workspace.vue中的文件上传逻辑移动到独立的FileUploader组件
2. 确保uploadedFiles变量在返回对象中可用
3. 保留原有的文件上传功能，但使其更具可维护性和模块化 